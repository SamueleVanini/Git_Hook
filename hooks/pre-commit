#!/usr/bin/env python
import configparser
import os
import git
from subprocess import check_output
from git import Repo

# setto la variabile con la directory attuale
dir_path = os.path.abspath(os.curdir)
# blocco per la lettura del file .ini
config = configparser.ConfigParser()
# costruzione percorso per file conf.ini
path_conf_file = os.path.join(dir_path, os.pardir)
path_conf_file = os.path.join(path_conf_file, 'Git_Hook', 'config_script',
                              'config.ini')
config.read(path_conf_file)
PERC_COMM_MIN = config.getint('Comments_Counter', 'Percentuale_Min_Comm')

def _cut_useles(files):
    """
    Cut the useles part of a raw and take only the file to commit
    :param files: list of files to commit or not
    :return file_list: list with only file to commit
    """
    files_list = []
    files = files.split('\n')
    for file in files:
        if not file.startswith('?') and not file.startswith(' ') and \
           file.endswith('.py'):
            file = file[2:]
            file = file.strip(' ')
            files_list.append(file)
    return files_list

# inizializzo una variabile repository
repo = Repo(dir_path)
git = repo.git
# eseguo il comando git status
status = git.status('-s')
status = _cut_useles(status)
# creo il path per il main
program_path = os.path.join(dir_path, 'Git_Hook', 'Main.py')
for file_name in status:
    # passo al main ogni file su cui effettuo il conteggio dei commenti
    file = os.path.join(dir_path, file_name)
    perc = check_output(['python', program_path, file])
    perc = perc.decode()
    perc = perc.split('\r')
    if perc[0] == 'pydoc assente':
        print("Nel file: " + file_name +
              ' pydoc mancanti o non sempre presenti')
        exit(1)
    if float(perc[0]) < PERC_COMM_MIN:
        print('Nel file: ' + file_name + ' i commenti sono meno del %s' %
              PERC_COMM_MIN)
        print('Percentuale commenti: ' + perc[0])
        exit(1)
    else:
        print('Nel file: ' + file_name + ' hai commentato bene, bravo')
        print('Percentuale commenti: ' + perc[0] + '%')
exit(0)
