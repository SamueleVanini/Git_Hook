#!/usr/bin/env python
import configparser
import os
import git
from subprocess import check_output
from git import Repo

# set the variable with the current directory
dir_path = os.path.abspath(os.curdir)
# parser of .ini file
config = configparser.ConfigParser()
# build path for conf.ini file
# path_conf_file = os.path.join(dir_path, os.pardir)
path_conf_file = os.path.join('py-comment-counter', 'config_script',
                              'config.ini')
config.read(path_conf_file)
percentage_min_comments = config.getint('Comments_Counter', 'percentage_min_comments')

def _cut_useless(files):
    """
    Cut the useless part of a list of files and take only the file to commit
    :param files: list of files to commit or not
    :return file_list: list with only file to commit
    """
    files_list = []
    files = files.split('\n')
    for file in files:
        if not file.startswith('?') and not file.startswith(' ') and \
           file.endswith('.py'):
            file = file[2:]
            file = file.strip(' ')
            files_list.append(file)
    return files_list

# initialize the repository variable
repo = Repo(dir_path)
git = repo.git
# run the command git status -s
status = git.status('-s')
status = _cut_useless(status)
# build path for Main.py
program_path = os.path.join(dir_path, 'py-comment-counter', 'Main.py')
for file_name in status:
    # passing the file to count the comments
    file = os.path.join(dir_path, file_name)
    perc = check_output(['python', program_path, file])
    perc = perc.decode()
    perc = perc.split('\r')
    if perc[0] == 'missing pydoc':
        print('ERROR: the file ' + file_name + ' misses some pydocs.')
        exit(1)
    if perc[0] == 'empty file':
        print('WARNING: ' + file_name + ' is an empty file.')
    if float(perc[0]) < percentage_min_comments:
        print('ERROR: the file ' + file_name + ' has less then ' + str(percentage_min_comments) + '% of comments. Comment percentage: ' + perc[0] + '%')
        exit(1)
    # else:
    #    print('PASSED: the file ' + file_name + ' has enough comments.')
    #    print('Comment percentage: ' + perc[0] + '%')
exit(0)
